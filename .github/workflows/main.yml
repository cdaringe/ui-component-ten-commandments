# @info
# main & pull_request jobs cannot de-dupe their workflow configuration :(
# https://github.community/t5/GitHub-Actions/Start-a-workflow-from-another-workflow/td-p/37586
name: main
on:
  push:
    branches:
      - main

concurrency:
  group: "pages"
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    # env:
    #   NEXT_PUBLIC_BASE_PATH: /web-component-ten-commandments
    runs-on: ubuntu-latest
    steps:
      # https://github.com/JamesIves/github-pages-deploy-action#getting-started-airplane
      - name: checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx', '**.mdx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install and Test
        run: |
          pnpm install
          pnpm format --check
          pnpm -r test
          pnpm build
      - name: Prepare site
        run: |
          echo "inspecting exported out dir"
          ls -al ./out
          echo "adding .nojekyll"
          touch ./out/.nojekyll || echo wuuuut
          ls -al out/.nojekyll || echo hmmmmmm
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
